/*

ESPectrum, a Sinclair ZX Spectrum emulator for Espressif ESP32 SoC

Copyright (c) 2023, 2024 Víctor Iborra [Eremus] and 2023 David Crespo [dcrespo3d]
https://github.com/EremusOne/ZX-ESPectrum-IDF

Based on ZX-ESPectrum-Wiimote
Copyright (c) 2020, 2022 David Crespo [dcrespo3d]
https://github.com/dcrespo3d/ZX-ESPectrum-Wiimote

Based on previous work by Ramón Martinez and Jorge Fuertes
https://github.com/rampa069/ZX-ESPectrum

Original project by Pete Todd
https://github.com/retrogubbins/paseVGA

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.

To Contact the dev team you can write to zxespectrum@gmail.com or 
visit https://zxespectrum.speccy.org/contacto

*/

#ifndef CaptureBMP_h
#define CaptureBMP_h

// Reference
//
// BITMAPFILEHEADER: 14 bytes
// typedef struct tagBITMAPFILEHEADER {
//   WORD  bfType;
//   DWORD bfSize;
//   WORD  bfReserved1;
//   WORD  bfReserved2;
//   DWORD bfOffBits;
// }
//
// BITMAPINFOHEADER: 40 bytes
// typedef struct tagBITMAPINFOHEADER {
//   DWORD biSize;
//   LONG  biWidth;
//   LONG  biHeight;
//   WORD  biPlanes;
//   WORD  biBitCount;
//   DWORD biCompression;
//   DWORD biSizeImage;
//   LONG  biXPelsPerMeter;
//   LONG  biYPelsPerMeter;
//   DWORD biClrUsed;
//   DWORD biClrImportant;
// }

// custom header for 8 bit indexed BMP with adapted palette
// which requires no translation between framebuffer values and indices
#define BMP_HEADER1_SIZE 18
#define BMP_HEADER2_SIZE 20
#define BMP_HEADER3_SIZE 1040

const unsigned char bmp_header1[BMP_HEADER1_SIZE] = {
    0x42,0x4d,0x36,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x36,0x04,0x00,0x00,0x28,0x00,
    0x00,0x00 };

const unsigned char bmp_header3[BMP_HEADER3_SIZE] = { 
    0x23,0x2e,0x00,0x00,0x23,0x2e,0x00,0x00,0x00,0x01,
    0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x00,0x00,0x00,
    0xbf,0x00,0x00,0x00,0xff,0x00,0x00,0x7f,0x00,0x00,0x00,0x7f,0x7f,0x00,0x00,0x7f,
    0xbf,0x00,0x00,0x7f,0xff,0x00,0x00,0xbf,0x00,0x00,0x00,0xbf,0x7f,0x00,0x00,0xbf,
    0xbf,0x00,0x00,0xbf,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x7f,0x00,0x00,0xff,
    0xbf,0x00,0x00,0xff,0xff,0x00,0x7f,0x00,0x00,0x00,0x7f,0x00,0x7f,0x00,0x7f,0x00,
    0xbf,0x00,0x7f,0x00,0xff,0x00,0x7f,0x7f,0x00,0x00,0x7f,0x7f,0x7f,0x00,0x7f,0x7f,
    0xbf,0x00,0x7f,0x7f,0xff,0x00,0x7f,0xbf,0x00,0x00,0x7f,0xbf,0x7f,0x00,0x7f,0xbf,
    0xbf,0x00,0x7f,0xbf,0xff,0x00,0x7f,0xff,0x00,0x00,0x7f,0xff,0x7f,0x00,0x7f,0xff,
    0xbf,0x00,0x7f,0xff,0xff,0x00,0xbf,0x00,0x00,0x00,0xbf,0x00,0x7f,0x00,0xbf,0x00,
    0xbf,0x00,0xbf,0x00,0xff,0x00,0xbf,0x7f,0x00,0x00,0xbf,0x7f,0x7f,0x00,0xbf,0x7f,
    0xbf,0x00,0xbf,0x7f,0xff,0x00,0xbf,0xbf,0x00,0x00,0xbf,0xbf,0x7f,0x00,0xbf,0xbf,
    0xbf,0x00,0xbf,0xbf,0xff,0x00,0xbf,0xff,0x00,0x00,0xbf,0xff,0x7f,0x00,0xbf,0xff,
    0xbf,0x00,0xbf,0xff,0xff,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x7f,0x00,0xff,0x00,
    0xbf,0x00,0xff,0x00,0xff,0x00,0xff,0x7f,0x00,0x00,0xff,0x7f,0x7f,0x00,0xff,0x7f,
    0xbf,0x00,0xff,0x7f,0xff,0x00,0xff,0xbf,0x00,0x00,0xff,0xbf,0x7f,0x00,0xff,0xbf,
    0xbf,0x00,0xff,0xbf,0xff,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x7f,0x00,0xff,0xff,
    0xbf,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x00,0x00,0x00,
    0xbf,0x00,0x00,0x00,0xff,0x00,0x00,0x7f,0x00,0x00,0x00,0x7f,0x7f,0x00,0x00,0x7f,
    0xbf,0x00,0x00,0x7f,0xff,0x00,0x00,0xbf,0x00,0x00,0x00,0xbf,0x7f,0x00,0x00,0xbf,
    0xbf,0x00,0x00,0xbf,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x7f,0x00,0x00,0xff,
    0xbf,0x00,0x00,0xff,0xff,0x00,0x7f,0x00,0x00,0x00,0x7f,0x00,0x7f,0x00,0x7f,0x00,
    0xbf,0x00,0x7f,0x00,0xff,0x00,0x7f,0x7f,0x00,0x00,0x7f,0x7f,0x7f,0x00,0x7f,0x7f,
    0xbf,0x00,0x7f,0x7f,0xff,0x00,0x7f,0xbf,0x00,0x00,0x7f,0xbf,0x7f,0x00,0x7f,0xbf,
    0xbf,0x00,0x7f,0xbf,0xff,0x00,0x7f,0xff,0x00,0x00,0x7f,0xff,0x7f,0x00,0x7f,0xff,
    0xbf,0x00,0x7f,0xff,0xff,0x00,0xbf,0x00,0x00,0x00,0xbf,0x00,0x7f,0x00,0xbf,0x00,
    0xbf,0x00,0xbf,0x00,0xff,0x00,0xbf,0x7f,0x00,0x00,0xbf,0x7f,0x7f,0x00,0xbf,0x7f,
    0xbf,0x00,0xbf,0x7f,0xff,0x00,0xbf,0xbf,0x00,0x00,0xbf,0xbf,0x7f,0x00,0xbf,0xbf,
    0xbf,0x00,0xbf,0xbf,0xff,0x00,0xbf,0xff,0x00,0x00,0xbf,0xff,0x7f,0x00,0xbf,0xff,
    0xbf,0x00,0xbf,0xff,0xff,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x7f,0x00,0xff,0x00,
    0xbf,0x00,0xff,0x00,0xff,0x00,0xff,0x7f,0x00,0x00,0xff,0x7f,0x7f,0x00,0xff,0x7f,
    0xbf,0x00,0xff,0x7f,0xff,0x00,0xff,0xbf,0x00,0x00,0xff,0xbf,0x7f,0x00,0xff,0xbf,
    0xbf,0x00,0xff,0xbf,0xff,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x7f,0x00,0xff,0xff,
    0xbf,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x00,0x00,0x00,
    0xbf,0x00,0x00,0x00,0xff,0x00,0x00,0x7f,0x00,0x00,0x00,0x7f,0x7f,0x00,0x00,0x7f,
    0xbf,0x00,0x00,0x7f,0xff,0x00,0x00,0xbf,0x00,0x00,0x00,0xbf,0x7f,0x00,0x00,0xbf,
    0xbf,0x00,0x00,0xbf,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x7f,0x00,0x00,0xff,
    0xbf,0x00,0x00,0xff,0xff,0x00,0x7f,0x00,0x00,0x00,0x7f,0x00,0x7f,0x00,0x7f,0x00,
    0xbf,0x00,0x7f,0x00,0xff,0x00,0x7f,0x7f,0x00,0x00,0x7f,0x7f,0x7f,0x00,0x7f,0x7f,
    0xbf,0x00,0x7f,0x7f,0xff,0x00,0x7f,0xbf,0x00,0x00,0x7f,0xbf,0x7f,0x00,0x7f,0xbf,
    0xbf,0x00,0x7f,0xbf,0xff,0x00,0x7f,0xff,0x00,0x00,0x7f,0xff,0x7f,0x00,0x7f,0xff,
    0xbf,0x00,0x7f,0xff,0xff,0x00,0xbf,0x00,0x00,0x00,0xbf,0x00,0x7f,0x00,0xbf,0x00,
    0xbf,0x00,0xbf,0x00,0xff,0x00,0xbf,0x7f,0x00,0x00,0xbf,0x7f,0x7f,0x00,0xbf,0x7f,
    0xbf,0x00,0xbf,0x7f,0xff,0x00,0xbf,0xbf,0x00,0x00,0xbf,0xbf,0x7f,0x00,0xbf,0xbf,
    0xbf,0x00,0xbf,0xbf,0xff,0x00,0xbf,0xff,0x00,0x00,0xbf,0xff,0x7f,0x00,0xbf,0xff,
    0xbf,0x00,0xbf,0xff,0xff,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x7f,0x00,0xff,0x00,
    0xbf,0x00,0xff,0x00,0xff,0x00,0xff,0x7f,0x00,0x00,0xff,0x7f,0x7f,0x00,0xff,0x7f,
    0xbf,0x00,0xff,0x7f,0xff,0x00,0xff,0xbf,0x00,0x00,0xff,0xbf,0x7f,0x00,0xff,0xbf,
    0xbf,0x00,0xff,0xbf,0xff,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x7f,0x00,0xff,0xff,
    0xbf,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x00,0x00,0x00,
    0xbf,0x00,0x00,0x00,0xff,0x00,0x00,0x7f,0x00,0x00,0x00,0x7f,0x7f,0x00,0x00,0x7f,
    0xbf,0x00,0x00,0x7f,0xff,0x00,0x00,0xbf,0x00,0x00,0x00,0xbf,0x7f,0x00,0x00,0xbf,
    0xbf,0x00,0x00,0xbf,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x7f,0x00,0x00,0xff,
    0xbf,0x00,0x00,0xff,0xff,0x00,0x7f,0x00,0x00,0x00,0x7f,0x00,0x7f,0x00,0x7f,0x00,
    0xbf,0x00,0x7f,0x00,0xff,0x00,0x7f,0x7f,0x00,0x00,0x7f,0x7f,0x7f,0x00,0x7f,0x7f,
    0xbf,0x00,0x7f,0x7f,0xff,0x00,0x7f,0xbf,0x00,0x00,0x7f,0xbf,0x7f,0x00,0x7f,0xbf,
    0xbf,0x00,0x7f,0xbf,0xff,0x00,0x7f,0xff,0x00,0x00,0x7f,0xff,0x7f,0x00,0x7f,0xff,
    0xbf,0x00,0x7f,0xff,0xff,0x00,0xbf,0x00,0x00,0x00,0xbf,0x00,0x7f,0x00,0xbf,0x00,
    0xbf,0x00,0xbf,0x00,0xff,0x00,0xbf,0x7f,0x00,0x00,0xbf,0x7f,0x7f,0x00,0xbf,0x7f,
    0xbf,0x00,0xbf,0x7f,0xff,0x00,0xbf,0xbf,0x00,0x00,0xbf,0xbf,0x7f,0x00,0xbf,0xbf,
    0xbf,0x00,0xbf,0xbf,0xff,0x00,0xbf,0xff,0x00,0x00,0xbf,0xff,0x7f,0x00,0xbf,0xff,
    0xbf,0x00,0xbf,0xff,0xff,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x7f,0x00,0xff,0x00,
    0xbf,0x00,0xff,0x00,0xff,0x00,0xff,0x7f,0x00,0x00,0xff,0x7f,0x7f,0x00,0xff,0x7f,
    0xbf,0x00,0xff,0x7f,0xff,0x00,0xff,0xbf,0x00,0x00,0xff,0xbf,0x7f,0x00,0xff,0xbf,
    0xbf,0x00,0xff,0xbf,0xff,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x7f,0x00,0xff,0xff,
    0xbf,0x00,0xff,0xff,0xff,0x00
};

void CaptureToBmp();

#endif